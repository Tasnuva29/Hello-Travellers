@model Hello_Travellers.Models.User

<style>
    body {
        width: 100%;
        height: 100%;
        background-color: #f5f5dc;
    }

    .hq-input {
        outline: none;
        border-radius: 30px;
        border: 2px solid #e7e7e7;
        width: 100%;
        height: 50px;
    }

        .hq-input:focus {
            outline: none;
            border-color: #3498db;
        }

    .input-group-text {
        border-radius: 30px;
    }
</style>


<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', (event) => {
        redirectIfSet('@Session["Username"]');
    });
</script>

@{
    
    if (ViewBag.flag != null)
    {
        <script>
            swal("", "Email is already registered", "error");
        </script>
    }
    if (ViewBag.chkuse != null)
    {
        <script>
            swal("", "Username is already registered", "error");
        </script>
    }
}


<div class="signup-container">
    <form action="SignUp" method="POST" id="signup" class="signup-email">
        <h1 class="signup-text text-center py-3">Sign Up</h1>

        <div class="signup-input-group">
            <input type="text" placeholder="Name" pattern="[A-Za-z ]*" title="only A-z,a-z,Space is allowed" name="Name" required>

        </div>
        <div>
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>



        <div class="signup-input-group">
            <input type="text" placeholder="Username" pattern="[A-Za-z0-9]*" title="only A-z,a-z,0-9 is allowed" name="Username" required>
        </div>
        <div>
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>


        <div class="signup-input-group">
            <input type="email" placeholder="Email" name="Email" required>
        </div>
        <div>
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>



        <div class="input-group">
            <input type="password" placeholder="Password" name="Password" id="myInput1" pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{6,}"
                   title="Must be 6 digit with A-Z,a-z,digit"
                   class="form-control hq-input"
                   required>
            <i class="input-group-text bi bi-eye-slash" id="togglePassword1" onclick="showPass(); showPassword(this.id, 'inputNewPassword')"></i>

        </div>
        <div>
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
        <div class="input-group mt-4 mb-4">
            <input type="password" placeholder="Confirm Password" name="ConfirmPassword" id="myInput2" class="form-control hq-input" required>
            <i class="input-group-text bi bi-eye-slash" id="togglePassword2" onclick="showConPass(); showPassword(this.id, 'inputConfirmPassword')"></i>

        </div>
        <div>
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>



        <div class="row mx-2">

            <div class="form-check col">
                <input class="form-check-input" type="radio" name="Gender" value="Male" id="radioMale" required>
                <label class="form-check-label" for="radioMale">
                    Male
                </label>
            </div>
            <div class="form-check col">
                <input class="form-check-input" type="radio" name="Gender" value="Female" id="radioFemale" required>
                <label class="form-check-label" for="radioFemale">
                    Female
                </label>
            </div>
        </div>
        <div class="signup-input-group">
            <button type="submit" name="submit" onclick="show();" value="next" class="SignupBtn">Sign Up</button>
        </div>
        <p class="signup-register-text text-center">Have an account? <a href="/UserAuth/Login">Login Here</a></p>



    </form>
</div>
<script>

    document.addEventListener("DOMContentLoaded", redirectIfLoggedIn('@Session["Username"]'));

    function showPass() {
        var x = document.getElementById("myInput1");
        if (x.type === "password") {
            x.type = "text";
        } else {
            x.type = "password";
        }
    }

    function showConPass() {
        var x = document.getElementById("myInput2");
        if (x.type === "password") {
            x.type = "text";
        } else {
            x.type = "password";
        }
    }

    function showPassword(iconID, inputFieldID) {
        if (document.getElementById(iconID).className === "input-group-text bi bi-eye-slash") {
            document.getElementById(iconID).className = "input-group-text bi bi-eye";
            document.getElementById(inputFieldID).type = "text";
        }
        else {
            document.getElementById(iconID).className = "input-group-text bi bi-eye-slash";
            document.getElementById(inputFieldID).type = "password";
        }
    }



</script>

@if (ViewBag.Message != null)
{
    <script type="text/javascript">

    window.onload = function () {

        alert("@ViewBag.Message");

        };
        //--password toggle--//
    </script>

}